<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABF+SURBVHhe5ZvnW1VXFofzJ8yHzEzaZDIxMymTMomJMT2O
        jiWWaMQWFY2JBSuKlSYiYAGxSxUUrFSVooAEBAOiYEPFGrtJTIyJps88WbPfBcdcrwe4XpCZPPmwnnvu
        Ofvus9dv9bX3vev+juPk/n+Nlfs7/sZIeR4nd3Fx32+U4N1ogP1DR7q3wxj5Y/vR8sd/jpY/GOKae3Zj
        f00E740CAKMDfVdIVGqhzF+VLePmrpYuY+bL33tPUwQB5J72v04wXAIABgOWp8rPP/8se2vOyN6jZ+TM
        pc/l0MnzkpK/S7zDk+XVocHyYJcJvzowXAIAdX9rbLh8df07iUjKkUd7TpbOo+fJjCUbZUtxlZw6/5mc
        /eQL2VZ2UKYsXCcveQapc8Fc7rSZ8B4+AR3wawXg+ntdAuDeDmOlVbdJUlx5RI6eviT/6Ocrf2jnpS/7
        U6fx8sLAABkxe6Vs2FYuJw0Ypy9elo15u2Swf5Q81nOKAlifVvBujUJ1jLhCrIc5eT/fH+s1Rd78IFSG
        BsbIzKh0Wb6xQBI2FauZNqaNLgEAIc3RYYnyw48/SeCKNF2A9exenpvvMPH8uwEy1viI7JJ9aiZ7Dn8s
        s2Mz5dX3gvVljr+DlHmH7/WR9Q7oke4+8q9Rc2XqwvWy3oBeUX1KDp44J6V7j8na3I9k575j8sVX11VL
        nd/nTC4DgEo9+vZk85KjqvJtPWfeQLdWguazbhySebDzeJVKSNwm2XXwpJw4+6kkZZVKJ695dfP9Mjfz
        WMxx7ajCfAL+X7p6qxlGrM7R+c5e+sL4o9NG0jtkVEiCvD5stgFmkjzxzlQpO3BCNuSVy5/MGqx31Ecu
        AwCxwHdnLJdr33wvcRlF8kCnW9XWUZ2VKbP4vxngBvmtkNyd+1UrZkVnyJ+Nw4TZv/bwkZeHzJJu4yKk
        t89i6TlxobQbHipPepgIY+aBoTFzVklhxWG59PlV2Wcc8KK123Qcqm8BbgGHsz7/6RUFujHpQ7cFAITN
        x2cWydfffCeexsZh0PH5A+Y5Y7j+cxdveegtb10Ii+R6cuQ6XSB2umRdnlQaEzl+9hONKEgUBms+vigH
        jp+TTUVVUnXktDKeWlChID5umIZRZwfLO9qPCJOPL1yWuQlbbtKwhui2AQDp1u/6y/5jZ9Xu2gwM1HvW
        c8um7zGLw0yiUrZLh5FzdAwLRpW37NirIRWHGpdepA4TU3mmr6+hGcZ0QsQrNEHStu+WK8aWP9p/XNoM
        CpTfG8fryLRF3EPLtn50QIr2HDEgTbUdZ0e3DQAE2gOmL5Mvv/5GF/9w14m2LwSMCfOTpNJIcUhAtEYO
        IgORImzlZmUKdb785bUb81iqDLNP9ZmuSReArcnZWfsep3dY71mQlCunLnzmsupb5BYAFiG1b7//UYJj
        MmyfW+SzYK2qOf6DkNmpzjuTQHEfcHBgjr/hOdnn4VMXFBxP/2ijPRNvGgOhaYCMmXiFJt6kja6Q2wAg
        cRadVrBbrl77VoYFxdkib0ksNH6z0YSPVc2R7rP9/dQp9p+2TO5uN8r4CC+V/I3fGRvGyeIciytrxG9p
        yi3zw+x7M2Pl4uWrxu6zVBMcn7tCTdIAFtB6gL8JO8flnMkEe0xYYAsCjBFCK6pPqiRhFnXuNj5CtWDp
        +nyZl5iliQvjAffBzhOkh3ekjJu3WqabjJOxjtLlGid88fKXkrh5h2qHq3bvSE0CAILhN94PMV77rNSc
        vqgJiiMISPJJUzQNMuqMp+8zZYlqANlkTul+1QLS68TNJXLAONZJEWt0UWR0Fz77UnZU1Uh+ebUmNx29
        5irjEBEByeMoyTYxBcd1uUpNBgCC4fbG0xO6sFnHDIzFvm0kiYfG4WE2hESyyQ93H9bqkmckNGgDQPad
        ulQjBJGmxCReI02aHZv+oabazNl36hIDzhWtQwDXUTNul5oFAMjShPKDJ+TEuU91kSwMDSAsovLYKN9R
        1ZUmV88y3j29cI8C89O//6MZHd+XrM/ThIl5PjHODW3AF1BsEeuPmDwhw4wjWWoK81CzAQABAjnCZiMZ
        vDLeH1u2WyQS3V5xSNPq699+r9EEhwgwAIJWUH0SAVD9xSZp2mbuYUJoGtHE0dTcpWYFAILZv5n0duGa
        rRrfV20pUUdpOSg0oJUxg8wPK+WcyQhRfaTpa7x8d+NEq0+c18qynakj8A/UHvgGgAqMStN6AH/wpMf0
        G3M2hZodAIiFoe7j5iXJNSNdbJ3u0S8gjJEXTRKUml+hqSspb7pxZjAPIDg1GCSpYY6k7J0KDs4TEwAU
        bP//CgDnOVgcdk8aiyRbdSNM1WoIjhBVJmcnMpC+jjKpb+fR86Xt4JmqPWkm9yfVJrziEDErQCNU0peg
        KcN8ju90h+6IBliEjQZFp2uBg0T5jgTzjDPDwaH6JFJkiEj3AaM14abcnWhCIWGS8Few65DeIyKQKzCW
        +1ZW6EovoSFqVg1wXgzSptQl9x9vVJncH6l+euUrU85G6hiyPcyF3z9kSuTX6honJE/k959d+Vo+v3pN
        647I5K0yddF6dYx2a+b9t5sNMk/zAGBzzyI8fqlxXIP9oiTGXJPcUNY62zBzOPqJJ96ZpnUCmSBaQbdp
        dVapptXOZbhF/zMA6iMkSTlMXPcKS9SylfBnFUTO4zEDRyb4Panz3W+OUrPYc/iUNkOaIwRCdxwACMnS
        REEL6ACtSNmuqS+NEztPjnMDCP9lqcos/oFxZI34BJxoczhAqEUAQIq0uYjlw0z1xjVOkJ4A3WYkjEQh
        rkmeaLlj+/QDXh4SpNUevoRkqbmkD7UIABYR44kAtMYmmSyRbk/BrmoZE7bKZHvzNEJg8+mFuzV/oMw+
        ffFzZZxI8sGseNt5m0ItBgBSo7zFF3Qfv0BVmEqOdJd8H29PdEDqMIu372gqS/IFyuynTBh1t+JriFoM
        ABojD5tkiOYGxQ6qTh1PhCD09Z+2VDtAJDp0ezEbNQvj7fm08xXNQS0GAAQzAaYM3n3olDoyGiExaYXq
        5HhGmXwnmbWjlgXAMEdIPHbmkjpCv2UpmtTYjXWXMJPbAbBFAcDukTzFDE2OASatxQlSM9iNd4famDKZ
        PoGrILQoABALIxoQ1tp6Buk2Filyczg4coegFanSb+oS1Ta7Mc7U4gBg53R44jOLdZMEDRgWFKv37cbb
        ESBSZ1gdZyspoq4YYJzp4jW5pqp0DdQmAwDqLMby1nw2pH48p7qLSftQnR8VHuGQ5MduvDMxN3WE75L1
        8taYeXKfYZ6OM+kzWeac+EzZVlolgctTap1rI5rQZAB4MS0rNknY66OuJ9+3Qx+gnu3np33D94PidIH0
        EWmEeExe7JLaMkfrAX6yNrtENuSWyvzEzbK1pEoClm28kVq3Nw42q3iPDA2IUrL2Ku2oyQB4z0+WI6cu
        aIsrKbtUu7op+RU3dYAgrskAif3rtpbVbnPVqS4bpRvZzm5goYwFVJzoc/39dA9x1/4aSdn2kfT0XqAg
        tB8RqlviXiErZX/NKcktqZThs2JVS+3mhNwGAGn19lmkHVp2fINjM2VTUaW2v6jd5+gObS0AfLIwihka
        m8+aqs7SECRKaOTsEYco7DQH5qkZpi1aJ5sKK6S08pC8YuqD4Og01QAqxUXJOZKzo1LBwAwGzlhmNNFH
        53eez5HcBgBpbineq7u/dHLZv2ebyn95qnxx9boy9GjdhgVb5qHxm3QH6ZWhs25SdRwZzBEaR5uaAB/h
        +B6IrHBieJKk5ZeZNDrChNB4bY91GBkmZXuPyCjzHZtfsDpLtYN38g5HDayP3AKABf1zeJgyya5OSdVR
        bVaQ3vJyHBsnQlBTFgEo2HnXceH12jlN0XCjIXYAMEdMSr4pmhLkd6+N0K7zrKg0Ve/UvDIZFhitBy6s
        qNBQc8aZ3AKAkMV5IfJ6zgJxJgjmeQYANDbnGhDQEpwiTc3+0+svY2FwXW6Z+gK7MdwbERwn2cax4ezS
        88sVEAqkh432uCLp+shtAIJjMrXbW1BeLS8ahu1slx4+PoKaviFbJH5nGSDxEXYaACHhoUbSizYWS0jS
        dmk7NEReGxEuvX0TpPXgYP0dQEF2a6mP3AKAl9HSzindpxpAH9/y6BALQDqYBgWPnRdGahBzETGIHmhV
        QwkRY9/wipQuE1fIKx/Mk5ffnyv9AlfLU/0CxMNnocxduUkdI37GVa1wWwOI+/T2ckv3q7NzBACJRqcW
        avuqvuMqJC/sGBH/R4YkaNOD06YNaQrztBkSIr1mxItn6Abx8EuQd3xXyiM9JmsKTAJUvq9GzcPu93bk
        NgDs+7Hfz+4tDtBSO1SQzg0bHs5b5RBMcPIrMjlXuz8ckiKPIJo01tHlt0/3D5QPwtPlnRkrZXDIOukb
        sFpeMiExY3u5JGQUKgjrckpVCHZzOJNbAKCKvY3k8OxsWNCnAxSkhwOsqjmtABEtnH/LGM4Pkg9w/O2H
        H/+tZ/4ojBqL2QDwaK9pKv3nBs2Szt7LpMfUWA2H5AZRG/M0Iao6dFy6mYjT2HyQWwCwEEIcLWrOA9Cr
        R3okO8k5O7XGJ6vjUJSzBvCdrW72BqYt3qDHZtgao+XNvI5j7QgA2r43R1p1nyxP9vWXFzxD5OHuPloX
        kA/AeI8JEfJ0H9c2T90CAGJytqzp7mK/PpFrVaJoBMdZ2AnCUdLTc3SCgEI+wLFWDjVyAgxHyrZ6Ywsm
        oeo2OVr6ByVL60HB0s44RM+Q9dJmaKhKm5YbKTba6ArzkNsA8ELa1TC8y/gC9uw5AElaTF8vOq1Q4jOK
        9DkHH6weH5KmFOZQZMDyND0QwUEJPW/YyKJh6rXh86WTUX3U//WREeoLHu89Q6ZErpHM7bsko6BcBvsu
        v/MAQIDAZmW1cXioPae1SWsxBxaAJHB01AdP95mh16g+Kk9FyMaHBQC+wxUAiPkDjAYMDdsoA4PXiod/
        4o0okLdzr1QcOCrJW4pdzgabBABU6/Xj5NiZT/R/Ao42T2hELTnaQkikGUqE4PADIND65mwAJkDsdsUJ
        YvcjF2SqBgBEn4BV0smU4yV7qhWEFFMdUjDRG3BFC5oMAFLmgCKVIP8YcX6OM8wvP6jOkqqPHgA7xhQ/
        +AlOigEAfQFXAGhlpN1rerw87uGryVCHsYv1uAyMo/6Ew4KyfaZSXajZY2PhsFkAYLeWretbPL55BmMn
        jaMcHhyvZStMoill+4/rPVpi7BbRJWYux987E6b1/ODZ8uaoBWr3OMI36q5JrACCfgHkMXmR+gR2mwC9
        PvNqMgBWWjxn5Ra95p5l/xyWLjTZ4vXvftA8n9OhjKF24E8ObIRgCoDBWQDnJoozAUBXnyjp479Knvec
        rbWAZ+h69Qsw3cWEQsyBXiPpOQCMn7tKQ+MLGmXs5mwGDeB/Quz2WovnOCz3yPC+//EnPdLCqQ5OfpE/
        PG8Ww/YXIRJTIBegh7DWVIQs3vkdFjH/S8PmyFuTVigI+IGe0+IMoEGyalORMrylaLes2JCnPmBN1g6p
        rD4uG7bulNwdlZofOJtZ0zXAqD2nPWh2sMUF8hxepk9AnKf9DZPJ2Ts1JOIEKZTIIjlLSFdp8dpt2kXi
        VDkNT7v3QADw7LtBMqQuAiD93n6J8n5QrJw4fV5BsJju6DVHv3vPX61aN9F8xqYV3DJnkwFArUCbzi4M
        wixhj0qRg02UzGyLsxvEGBwhoZJwWGzU3zt8jUw0xLFYSmw7NbUIAJ4wzm9ERIaqP4WQhwGAxGvPwWMS
        mZQtIbHpEpOar+3x4oqDEp++XXoZAcWkFmirzNnEmgwAxKI5tUV3GLumrGX7GzOAQQ41k+k5emT+44Pf
        AKRCAxh7hOQKzgt0poe6TlLHRyr8zICZJi0O00hD95diCKlbmyO0yBYmZ0uy0YqwuEz9/8EdAQBiYswB
        n0B36Ga6tUmBLTKe9JbOkTWH45j6yBpHC8zSGOYj5WY+ri1iLADxaTd/LQBON39LBO9GA2r/5wMavylS
        nsfJfwE9igNYCQosqAAAAABJRU5ErkJggg==
</value>
  </data>
</root>